name: Run Tests

on:
  workflow_call:

jobs:

  vllm_docker:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Run Docker
        run: |
          git clone --depth 1 --branch v0.8.4 https://github.com/vllm-project/vllm.git
          cd vllm
          docker build -f docker/Dockerfile.cpu -t vllm-cpu-env --shm-size=4g .
          
          docker run -d  --name vllm \
             --network="host" \
             vllm-cpu-env --model Qwen/Qwen2.5-Coder-0.5B-Instruct --host 0.0.0.0 --port 8009 --seed 42
          
          echo -e "\nVerify the vllm container is serving\n"
          docker ps -f name=vllm
          
          echo "Loop until the endpoint responds successfully"
          while ! curl --silent --fail --get "http://localhost:8009/ping" >/dev/null; do
            echo "Ping not available yet. Retrying in 5 seconds..."
            docker logs vllm
            sleep 5
          done
          echo -e "\nPing is now available!\n"
          
          echo -e "\nPrint the vllm container logs\n"
          docker logs vllm

      - name: Gateway Tests
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          INTEGRATION_TEST_BACKEND: vllm
          START_VLLM_SERVER: false
        run: uv run --active python aqueduct/manage.py test gateway


  gateway:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Gateway Tests
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: uv run --active python aqueduct/manage.py test gateway

  compose:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run docker compose
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: "./docker-compose.yaml"
          up-flags: "--build --wait" # the wait flag checks for health status
