# Generated by Django 5.2 on 2025-06-03 11:16

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('management', '0001_groups'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Org',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requests_per_minute', models.PositiveIntegerField(blank=True, help_text='Maximum requests allowed per minute. Null means use fallback or no limit.', null=True)),
                ('input_tokens_per_minute', models.PositiveIntegerField(blank=True, help_text='Maximum input tokens allowed per minute. Null means use fallback or no limit.', null=True)),
                ('output_tokens_per_minute', models.PositiveIntegerField(blank=True, help_text='Maximum output tokens allowed per minute. Null means use fallback or no limit.', null=True)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Org name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requests_per_minute', models.PositiveIntegerField(blank=True, help_text='Maximum requests allowed per minute. Null means use fallback or no limit.', null=True)),
                ('input_tokens_per_minute', models.PositiveIntegerField(blank=True, help_text='Maximum input tokens allowed per minute. Null means use fallback or no limit.', null=True)),
                ('output_tokens_per_minute', models.PositiveIntegerField(blank=True, help_text='Maximum output tokens allowed per minute. Null means use fallback or no limit.', null=True)),
                ('name', models.CharField(max_length=255, verbose_name='Team name')),
                ('description', models.TextField(blank=True)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='management.org')),
            ],
            options={
                'unique_together': {('name', 'org')},
            },
        ),
        migrations.CreateModel(
            name='ServiceAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Service Account name')),
                ('description', models.TextField(blank=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_accounts', to='management.team')),
            ],
            options={
                'unique_together': {('name', 'team')},
            },
        ),
        migrations.CreateModel(
            name='TeamMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_admin', models.BooleanField(default=False)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.team')),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Token name')),
                ('key_hash', models.CharField(editable=False, help_text='SHA-256 hash of the token key.', max_length=64, unique=True)),
                ('key_preview', models.CharField(editable=False, help_text='First few characters of the original token key for display.', max_length=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('service_account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='token', to='management.serviceaccount')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_auth_tokens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requests_per_minute', models.PositiveIntegerField(blank=True, help_text='Maximum requests allowed per minute. Null means use fallback or no limit.', null=True)),
                ('input_tokens_per_minute', models.PositiveIntegerField(blank=True, help_text='Maximum input tokens allowed per minute. Null means use fallback or no limit.', null=True)),
                ('output_tokens_per_minute', models.PositiveIntegerField(blank=True, help_text='Maximum output tokens allowed per minute. Null means use fallback or no limit.', null=True)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user_profiles', to='management.org')),
                ('teams', models.ManyToManyField(blank=True, related_name='member_profiles', through='management.TeamMembership', to='management.team')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='teammembership',
            name='user_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.userprofile'),
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_tokens', models.PositiveIntegerField(default=0, help_text='Tokens consumed by the input for this request')),
                ('output_tokens', models.PositiveIntegerField(default=0, help_text='Tokens generated by the output for this request')),
                ('model', models.CharField(blank=True, help_text='Model used in request', max_length=255, null=True)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('method', models.CharField(blank=True, help_text='HTTP method used (e.g., GET, POST, etc.)', max_length=16)),
                ('status_code', models.PositiveIntegerField(blank=True, help_text='HTTP status code returned by the endpoint', null=True)),
                ('response_time_ms', models.PositiveIntegerField(blank=True, help_text='Time taken to respond, in milliseconds', null=True)),
                ('user_agent', models.CharField(blank=True, help_text='User agent string of the client making the request', max_length=256)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address from which the request originated', null=True)),
                ('path', models.CharField(blank=True, help_text="The specific API path requested after the base endpoint URL (e.g., '/chat/completions')", max_length=512)),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='management.token')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['token', 'timestamp'], name='management__token_i_84e9f4_idx'), models.Index(fields=['model', 'timestamp'], name='management__model_71b19f_idx')],
            },
        ),
        migrations.AlterUniqueTogether(
            name='teammembership',
            unique_together={('user_profile', 'team')},
        ),
    ]
